import React, { useState, useEffect } from 'react';
import { Home, Radio, AlertTriangle, Globe, Camera, Battery, Droplets, Thermometer, Wind, Waves, Fish, X, ChevronLeft, Play, Trophy, Eye, Map, Activity } from 'lucide-react';

const AquaroxApp = () => {
  const [currentPage, setCurrentPage] = useState('splash');
  const [selectedFish, setSelectedFish] = useState(null);
  const [score, setScore] = useState(0);
  const [gameActive, setGameActive] = useState(false);
  const [foundSpecies, setFoundSpecies] = useState([]);
  const [missionTimer, setMissionTimer] = useState(180);
  
  const nasaData = {
    seaTemp: 28.5,
    chlorophyll: 0.35,
    windSpeed: 12.3,
    waveHeight: 1.8
  };
  
  const [robotStatus, setRobotStatus] = useState({
    battery: 87,
    depth: 120,
    oxygen: 94,
    temp: 24.8
  });

  useEffect(() => {
    const interval = setInterval(() => {
      setRobotStatus(prev => ({
        ...prev,
        battery: Math.max(85, prev.battery - 0.1),
        depth: Math.max(100, Math.min(140, prev.depth + (Math.random() - 0.5) * 3))
      }));
    }, 2000);
    return () => clearInterval(interval);
  }, []);

  useEffect(() => {
    if (gameActive && missionTimer > 0) {
      const timer = setInterval(() => {
        setMissionTimer(prev => Math.max(0, prev - 1));
      }, 1000);
      return () => clearInterval(timer);
    }
  }, [gameActive, missionTimer]);

  const marineLife = [
    { id: 1, name: 'Clownfish', x: 25, y: 50, scientificName: 'Amphiprioninae', habitat: 'Coral reefs', depth: '1-12m', status: 'Stable', points: 10 },
    { id: 2, name: 'Sea Turtle', x: 70, y: 40, scientificName: 'Chelonioidea', habitat: 'Open ocean', depth: '0-300m', status: 'Endangered', points: 25 },
    { id: 3, name: 'Bleached Coral', x: 45, y: 75, scientificName: 'Scleractinia', habitat: 'Reef structures', depth: '0-50m', status: 'Critical', points: 50 },
    { id: 4, name: 'Dolphin', x: 80, y: 25, scientificName: 'Delphinidae', habitat: 'Coastal waters', depth: '0-200m', status: 'Stable', points: 30 },
    { id: 5, name: 'Jellyfish', x: 15, y: 30, scientificName: 'Medusozoa', habitat: 'Open ocean', depth: '0-700m', status: 'Blooming', points: 15 },
    { id: 6, name: 'Seahorse', x: 55, y: 60, scientificName: 'Hippocampus', habitat: 'Seagrass beds', depth: '1-70m', status: 'Vulnerable', points: 20 }
  ];

  if (currentPage === 'splash') {
    return (
      <div className="w-full h-screen max-w-md mx-auto bg-gradient-to-b from-blue-950 via-blue-800 to-cyan-600 flex flex-col items-center justify-center p-8">
        <div className="w-24 h-24 bg-white rounded-full flex items-center justify-center mb-6 shadow-2xl">
          <Radio className="text-blue-600" size={48} />
        </div>
        
        <h1 className="text-5xl font-bold text-white mb-3">Aquarox</h1>
        <p className="text-xl text-cyan-200 mb-2">Ocean Explorer</p>
        <p className="text-sm text-cyan-300 mb-8 text-center">Bridging NASA Space Data with Underwater Exploration</p>
        
        <div className="space-y-3 mb-12">
          <div className="flex items-center justify-center gap-2 text-white text-sm">
            <Globe size={16} />
            <span>NASA Satellite Integration</span>
          </div>
          <div className="flex items-center justify-center gap-2 text-white text-sm">
            <Radio size={16} />
            <span>Real-time Robot Data</span>
          </div>
          <div className="flex items-center justify-center gap-2 text-white text-sm">
            <Eye size={16} />
            <span>VR Deep Dive Experience</span>
          </div>
        </div>
        
        <button 
          onClick={() => setCurrentPage('home')}
          className="bg-white text-blue-600 px-12 py-4 rounded-full font-bold text-lg shadow-lg"
        >
          Start Exploration
        </button>
      </div>
    );
  }

  if (currentPage === 'home') {
    return (
      <div className="w-full h-screen max-w-md mx-auto flex flex-col bg-gradient-to-b from-blue-900 to-blue-700">
        <div className="p-6 text-white">
          <div className="flex items-center justify-between mb-6">
            <div className="flex items-center gap-3">
              <div className="w-12 h-12 bg-white rounded-full flex items-center justify-center">
                <Radio className="text-blue-600" size={24} />
              </div>
              <div>
                <h1 className="text-2xl font-bold">Aquarox</h1>
                <p className="text-xs opacity-80">Mission Control</p>
              </div>
            </div>
            <div className="flex items-center gap-2 bg-blue-800 px-3 py-2 rounded-full">
              <Trophy size={18} className="text-yellow-400" />
              <span className="font-bold">{score}</span>
            </div>
          </div>

          <div className="grid grid-cols-2 gap-3 mb-4">
            <button 
              onClick={() => setCurrentPage('missions')}
              className="bg-gradient-to-br from-cyan-500 to-blue-600 rounded-2xl p-4 text-left shadow-lg"
            >
              <Map className="mb-2" size={28} />
              <h3 className="font-bold">Missions</h3>
              <p className="text-xs opacity-90">Start exploring</p>
            </button>
            
            <button 
              onClick={() => setCurrentPage('vr')}
              className="bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl p-4 text-left shadow-lg"
            >
              <Camera className="mb-2" size={28} />
              <h3 className="font-bold">VR Dive</h3>
              <p className="text-xs opacity-90">Explore ocean</p>
            </button>
            
            <button 
              onClick={() => setCurrentPage('game')}
              className="bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl p-4 text-left shadow-lg"
            >
              <Play className="mb-2" size={28} />
              <h3 className="font-bold">Game</h3>
              <p className="text-xs opacity-90">Find species</p>
            </button>
            
            <button 
              onClick={() => setCurrentPage('rescue')}
              className="bg-gradient-to-br from-orange-500 to-red-600 rounded-2xl p-4 text-left shadow-lg"
            >
              <AlertTriangle className="mb-2" size={28} />
              <h3 className="font-bold">Alerts</h3>
              <p className="text-xs opacity-90">3 Active</p>
            </button>
          </div>

          <div className="bg-blue-800 bg-opacity-50 rounded-2xl p-4 mb-4">
            <h3 className="font-semibold mb-3 flex items-center gap-2">
              <Activity size={18} />
              Live Robot Status
            </h3>
            <div className="grid grid-cols-3 gap-3 text-xs">
              <div className="text-center">
                <Battery className="mx-auto mb-1" size={16} />
                <p className="opacity-80">Battery</p>
                <p className="font-bold">{robotStatus.battery.toFixed(0)}%</p>
              </div>
              <div className="text-center">
                <Droplets className="mx-auto mb-1" size={16} />
                <p className="opacity-80">Depth</p>
                <p className="font-bold">{robotStatus.depth.toFixed(0)}m</p>
              </div>
              <div className="text-center">
                <Thermometer className="mx-auto mb-1" size={16} />
                <p className="opacity-80">Temp</p>
                <p className="font-bold">{robotStatus.temp}Â°C</p>
              </div>
            </div>
          </div>

          <button 
            onClick={() => setCurrentPage('data')}
            className="w-full bg-gradient-to-r from-indigo-600 to-purple-600 rounded-xl p-4 flex items-center justify-between shadow-lg"
          >
            <div className="flex items-center gap-3">
              <Globe size={24} />
              <div className="text-left">
                <p className="font-bold">NASA Data Stream</p>
                <p className="text-xs opacity-90">6 satellites connected</p>
              </div>
            </div>
            <ChevronLeft className="rotate-180" size={20} />
          </button>
        </div>

        <div className="mt-auto bg-blue-950 text-white py-3 px-6 grid grid-cols-4 gap-2">
          <button className="flex flex-col items-center gap-1 text-blue-300">
            <Home size={24} />
            <span className="text-xs">Home</span>
          </button>
          <button onClick={() => setCurrentPage('missions')} className="flex flex-col items-center gap-1">
            <Map size={24} />
            <span className="text-xs">Missions</span>
          </button>
          <button onClick={() => setCurrentPage('data')} className="flex flex-col items-center gap-1">
            <Globe size={24} />
            <span className="text-xs">Data</span>
          </button>
          <button onClick={() => setCurrentPage('game')} className="flex flex-col items-center gap-1">
            <Play size={24} />
            <span className="text-xs">Game</span>
          </button>
        </div>
      </div>
    );
  }

  if (currentPage === 'game') {
    return (
      <div className="w-full h-screen max-w-md mx-auto flex flex-col bg-gradient-to-b from-emerald-900 to-teal-800">
        <div className="p-4 flex items-center justify-between text-white">
          <button onClick={() => setCurrentPage('home')}>
            <ChevronLeft size={24} />
          </button>
          <h2 className="text-xl font-bold">Species Discovery</h2>
          <div className="flex items-center gap-2 bg-emerald-950 px-3 py-1 rounded-full">
            <Trophy size={18} className="text-yellow-400" />
            <span className="font-bold">{score}</span>
          </div>
        </div>

        {!gameActive ? (
          <div className="flex-1 flex flex-col items-center justify-center p-6 text-white">
            <div className="bg-emerald-800 bg-opacity-50 backdrop-blur rounded-2xl p-8 text-center max-w-sm">
              <Fish className="mx-auto mb-4 text-cyan-300" size={64} />
              <h3 className="text-2xl font-bold mb-4">Marine Life Hunt</h3>
              <p className="mb-6 opacity-90">
                Use Aquarox to discover marine species. NASA data helps locate them.
              </p>
              <div className="bg-emerald-900 rounded-xl p-4 mb-6 text-left text-sm space-y-2">
                <p><strong>Common:</strong> 10-15 pts</p>
                <p><strong>Endangered:</strong> 25-30 pts</p>
                <p><strong>Critical:</strong> 50 pts</p>
              </div>
              <button 
                onClick={() => {
                  setGameActive(true);
                  setFoundSpecies([]);
                  setMissionTimer(180);
                }}
                className="w-full bg-white text-emerald-800 font-bold py-4 rounded-xl flex items-center justify-center gap-2"
              >
                <Play size={24} />
                Start Mission
              </button>
            </div>
          </div>
        ) : (
          <div className="flex-1 relative">
            <div className="absolute top-4 left-4 right-4 flex justify-between items-center z-20">
              <div className="bg-black bg-opacity-70 text-white px-4 py-2 rounded-full font-bold">
                {Math.floor(missionTimer / 60)}:{(missionTimer % 60).toString().padStart(2, '0')}
              </div>
              <div className="bg-black bg-opacity-70 text-white px-4 py-2 rounded-full font-bold">
                {foundSpecies.length}/6
              </div>
            </div>

            <div className="absolute inset-0 bg-gradient-to-b from-cyan-500 via-blue-700 to-blue-950">
              <svg viewBox="0 0 100 100" className="w-full h-full">
                <rect x="48" y="0" width="4" height="100" fill="white" opacity="0.3"/>
                
                {marineLife.map(species => {
                  const found = foundSpecies.includes(species.id);
                  return (
                    <g 
                      key={species.id}
                      transform={`translate(${species.x}, ${species.y})`}
                      onClick={() => {
                        if (!found) {
                          setFoundSpecies([...foundSpecies, species.id]);
                          setScore(score + species.points);
                          setSelectedFish(species);
                        }
                      }}
                      className={`${found ? 'opacity-30' : 'cursor-pointer'}`}
                    >
                      <circle cx="0" cy="0" r="8" fill={found ? "#4ade80" : "rgba(59, 130, 246, 0.4)"} />
                      <ellipse cx="0" cy="0" rx="3" ry="2" fill="#fb923c"/>
                    </g>
                  );
                })}
              </svg>
            </div>

            <div className="absolute bottom-4 left-4 right-4 bg-black bg-opacity-80 text-white p-4 rounded-xl text-xs">
              <div className="flex items-center gap-2 mb-2">
                <Globe size={16} className="text-cyan-400" />
                <span className="font-semibold">NASA Data:</span>
              </div>
              <p>Temp: {nasaData.seaTemp}Â°C (MODIS) | Chlorophyll: {nasaData.chlorophyll} mg/mÂ³</p>
            </div>
          </div>
        )}

        {selectedFish && (
          <div className="absolute inset-0 bg-black bg-opacity-90 flex items-center justify-center p-6 z-50">
            <div className="bg-gradient-to-br from-emerald-700 to-teal-800 rounded-2xl p-6 max-w-sm w-full text-white relative">
              <button onClick={() => setSelectedFish(null)} className="absolute top-4 right-4">
                <X size={24} />
              </button>
              
              <div className="text-center mb-4">
                <div className="w-16 h-16 bg-green-400 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Trophy className="text-green-900" size={32} />
                </div>
                <h3 className="text-2xl font-bold">+{selectedFish.points} Points</h3>
                <p className="text-lg font-semibold">{selectedFish.name}</p>
                <p className="text-sm italic opacity-80">{selectedFish.scientificName}</p>
              </div>
              
              <div className="space-y-2 text-sm bg-emerald-900 bg-opacity-50 rounded-xl p-4 mb-4">
                <div className="flex justify-between">
                  <span>Status:</span>
                  <span className="font-semibold">{selectedFish.status}</span>
                </div>
                <div className="flex justify-between">
                  <span>Habitat:</span>
                  <span className="font-semibold">{selectedFish.habitat}</span>
                </div>
              </div>

              <button onClick={() => setSelectedFish(null)} className="w-full bg-white text-emerald-800 font-bold py-3 rounded-xl">
                Continue
              </button>
            </div>
          </div>
        )}
      </div>
    );
  }

  if (currentPage === 'data') {
    return (
      <div className="w-full h-screen max-w-md mx-auto flex flex-col bg-gradient-to-b from-slate-900 to-slate-800">
        <div className="p-4 flex items-center text-white">
          <button onClick={() => setCurrentPage('home')}>
            <ChevronLeft size={24} />
          </button>
          <h2 className="text-xl font-bold ml-3">NASA + Robot Data</h2>
        </div>

        <div className="flex-1 p-4 space-y-4 overflow-auto">
          <div className="bg-gradient-to-br from-blue-600 to-blue-800 rounded-xl p-4 text-white">
            <h3 className="font-bold mb-3">NASA Satellite Data</h3>
            <div className="space-y-2 text-sm">
              <div className="flex justify-between">
                <span>Sea Temp (MODIS)</span>
                <span className="font-bold">{nasaData.seaTemp}Â°C</span>
              </div>
              <div className="flex justify-between">
                <span>Chlorophyll (PACE)</span>
                <span className="font-bold">{nasaData.chlorophyll} mg/mÂ³</span>
              </div>
              <div className="flex justify-between">
                <span>Wind (SMAP)</span>
                <span className="font-bold">{nasaData.windSpeed} km/h</span>
              </div>
              <div className="flex justify-between">
                <span>Waves (SWOT)</span>
                <span className="font-bold">{nasaData.waveHeight}m</span>
              </div>
            </div>
          </div>

          <div className="bg-gradient-to-br from-green-600 to-green-800 rounded-xl p-4 text-white">
            <h3 className="font-bold mb-3">Aquarox Robot</h3>
            <div className="space-y-2 text-sm">
              <div className="flex justify-between">
                <span>Battery</span>
                <span className="font-bold">{robotStatus.battery.toFixed(1)}%</span>
              </div>
              <div className="flex justify-between">
                <span>Depth</span>
                <span className="font-bold">{robotStatus.depth.toFixed(1)}m</span>
              </div>
              <div className="flex justify-between">
                <span>Temperature</span>
                <span className="font-bold">{robotStatus.temp}Â°C</span>
              </div>
              <div className="flex justify-between">
                <span>Oxygen</span>
                <span className="font-bold">{robotStatus.oxygen}%</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="w-full h-screen max-w-md mx-auto bg-blue-900 flex items-center justify-center text-white">
      <div className="text-center">
        <h2 className="text-2xl font-bold mb-4">Page Under Development</h2>
        <button onClick={() => setCurrentPage('home')} className="bg-white text-blue-900 px-6 py-2 rounded-lg font-bold">
          Back to Home
        </button>
      </div>
    </div>
  );
};

export default AquaroxApp;
